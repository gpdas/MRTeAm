<launch>
    <param name="/use_sim_time" value="true"/>
    <arg name="reallocate" default="False"/>

    <arg name="task_file" default=""/>
    <arg name="scenario_id" default=""/>

    <arg name="dummy_robot_name" default="robot_0"/>

    <arg name="classifier_name" default="clf_execution_phase_time_random_forest"/>

    <!-- Map server -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(find mrta)/config/maps/$(arg map_file) 0.01"
          respawn="false"/>

    <!-- BEGIN Dummy Robot -->
    <group ns="$(arg dummy_robot_name)">
        <param name="tf_prefix" value="$(arg dummy_robot_name)"/>

        <node pkg="move_base" type="move_base" name="move_base_node" output="screen" respawn="false" required="true">
            <remap from="map" to="/map"/>

            <param name="controller_frequency" value="0.1"/>
            <param name="shutdown_costmaps" value="false"/>

            <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS"/>
            <param name="base_global_planner" value="global_planner/GlobalPlanner"/>

            <param name="planner_frequency" value="0"/>

            <rosparam file="$(find mrta_robot_controller)/param/move_base_generic/costmap_common_params.yaml"
                      command="load"/>

            <rosparam file="$(find mrta_robot_controller)/param/move_base_generic/costmap_common_params.yaml"
                      command="load" ns="global_costmap"/>
            <rosparam file="$(find mrta_robot_controller)/param/move_base_generic/costmap_common_params.yaml"
                      command="load" ns="local_costmap"/>
            <rosparam file="$(find mrta_robot_controller)/param/move_base_generic/local_costmap_params.yaml"
                      command="load"/>
            <rosparam file="$(find mrta_robot_controller)/param/move_base_generic/global_costmap_params.yaml"
                      command="load"/>

            <rosparam file="$(find mrta_robot_controller)/param/move_base_generic/dwa_local_planner_params.yaml"
                      command="load"/>
            <rosparam file="$(find mrta_robot_controller)/param/move_base_generic/global_planner_params.yaml"
                      command="load" ns="GlobalPlanner"/>

        </node>

        <node pkg="fake_localization" type="fake_localization" name="fake_localization" respawn="false" output="screen">
            <param name="odom_frame_id" value="$(arg dummy_robot_name)/odom"/>
            <param name="base_frame_id" value="$(arg dummy_robot_name)/base_link"/>
            <param name="publish_frequency" value="5.0"/>
        </node>
    </group>
    <!-- END Dummy Robot -->

    <node name="mrta_auctioneer" pkg="mrta_auctioneer" type="mrta_auctioneer" required="true" output="screen">
        <param name="task_file" value="$(find mrta_auctioneer)/task_files/$(arg task_file)"/>
        <param name="scenario_id" value="$(arg scenario_id)" />
        <param name="mechanism" value="$(arg mechanism)"/>
        <param name="reallocate" value="$(arg reallocate)"/>
        <param name="dynamic_mechanism" value="True"/>
        <param name="dummy_robot_name" value="$(arg dummy_robot_name)"/>
        <param name="classifier_name" value="$(arg classifier_name)"/>
    </node>

    <!--
    <node pkg="mrta_auctioneer" type="mrta_auctioneer" name="mrta_task_generator" required="true" output="screen">
      <param name="task_file" value="$(find mrta_auctioneer)/task_files/$(arg task_file)" />
    </node>
    -->

    <!-- FKIE master discovery -->
    <!--<node pkg="master_discovery_fkie" type="master_discovery" name="master_discovery" respawn="true" output="screen">-->
        <!--<param name="name" value="auctioneer_master"/>-->
        <!--&lt;!&ndash; We want a unique multicast group per experiment. Set it here to avoid conflicts on the cluster. &ndash;&gt;-->
        <!--<param name="mcast_group" value="226.0.0.$(optenv SGE_TASK_ID 1)"/>-->
    <!--</node>-->

    <!-- FKIE master sync -->
    <!--
      <node pkg="master_sync_fkie" type="master_sync" name="master_sync" respawn="true" output="log">
        <rosparam param="sync_hosts">[]</rosparam>
      </node>
    -->

</launch>
